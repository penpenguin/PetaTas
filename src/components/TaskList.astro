---
// TaskList.astro - UNUSED COMPONENT
// This component is not currently used in the application.
// Task rendering is handled dynamically by panel-client.ts for better Chrome extension performance.
// This file is kept for potential future server-side rendering needs.

import type { Task } from '../types/task';
import TaskRow from './TaskRow.astro';

export interface Props {
  tasks: Task[];
  onTaskToggle?: (taskId: string, completed: boolean) => void;
  onTaskDelete?: (taskId: string) => void;
  onTaskEdit?: (taskId: string, updates: Partial<Task>) => void;
  onTimerToggle?: (taskId: string) => void;
}

const { tasks = [], onTaskToggle, onTaskDelete, onTaskEdit, onTimerToggle } = Astro.props;
---

<div id="task-list-container">
  {tasks.length === 0 ? (
    <div class="empty-state text-center py-8" data-testid="empty-state">
      <div class="text-gray-500">
        <svg class="w-16 h-16 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
        </svg>
        <p class="text-lg font-medium">No tasks yet. Paste a Markdown table to get started!</p>
        <p class="text-sm mt-2">Copy a table from anywhere and click "Paste Markdown" to create your task list.</p>
      </div>
    </div>
  ) : (
    <div class="list" data-testid="task-list">
      {tasks.map((task) => (
        <TaskRow
          task={task}
          onToggle={onTaskToggle}
          onDelete={onTaskDelete}
          onEdit={onTaskEdit}
          onTimerToggle={onTimerToggle}
        />
      ))}
    </div>
  )}
</div>

<!-- 
  Note: This Astro component provides the server-side rendered HTML structure.
  All dynamic behavior and task management is handled by panel-client.ts
  to avoid duplication and ensure consistent behavior across the application.
-->

<style>
  .list-row {
    @apply flex items-center gap-3 p-3 bg-base-200 rounded-lg hover:bg-base-300 transition-colors;
  }

  .list-col-grow {
    @apply flex-1 min-w-0;
  }

  .task-name {
    @apply font-medium truncate;
  }

  .task-name:hover {
    @apply text-primary;
  }

  .timer-display {
    @apply text-sm font-mono text-base-content/70;
  }

  .empty-state {
    @apply flex flex-col items-center justify-center h-full;
  }

  .checkbox {
    @apply flex-shrink-0;
  }

  .checkbox:checked {
    @apply accent-primary;
  }

  .task-name-input {
    @apply w-full bg-transparent border-none outline-none;
  }

  .task-name-input:focus {
    @apply ring-2 ring-primary rounded px-1;
  }
</style>